package com.ohgiraffers.section02.variable;

public class Application2 {

    public static void main(String[] args) {

        /* 수업목표. 변수를 선언하고, 값을 할당하여 사용할 수 있다. */
        /*
        * 필기.
        *   변수를 사용하는 방법
        *   1. 변수를 준비한다.(선언)
        *   2. 변수에 값을 대입한다.(값 대입 및 초기화)
        *   3. 변수를 사용한다.
        *  */

        /* 목차. 1. 변수를 준비(선언)한다. */
        // 자료형 변수명; ex) int num;

        /* 필기.
        *   자료형이란?
        *   다양한 값의 형태별로 어느 정도의 크기를 하나의 값으로 취급 할 것인지,
        *   Compiler 와 약속한 키워드이다.
        *   예를들어 앞에서 사용한 int 라는 자료형은 정수를 4byte 만큼 읽어서
        *   하나의 값으로 취급하겠다는 약속이다.
        *   자료형은 기본자료형(Primary Type) 과 참조 자료형(Reference Type)
        *   두 가지로 나뉘어 진다.
        *   그 중 기본자료형 8가지 부터 살펴보자.
        *  */

        /* 목차. 1-1-1. 숫자를 취급하는 자료형 */
        /* 필기. 정수를 취급하는 자료형은 4가지가 있다. */
        byte bnum; // 1byte
        short snum; // 2byte
        int inum; // 4byte
        long lnum; // 8byte

        /* 필기. 실수를 취급하는 자료형은 2가지가 있다. */
        float fnum; // 4byte
        double dnum; // 8byte

        /* 목차. 1-1-2. 문자를 취급하는 자료형 */
        /* 필기. 문자를 취급하는 자료형은 한 가지가 있다. */

        char ch; // 2byte

        /* 목차. 1-1-3. 논리값을 취급하는 자료형 */
        boolean isTrue; // 1byte

        /* 필기. 이상 8가지를 기본자료형(Primary) 이라고 한다. */

        /* 목차. 1-1-4. 문자열을 취급하는 자료형 */
        String str; // 4byte 주소는 엄밀히 따지면 4byte 정수형으로 저장된다.

        /* 목차. 2. 변수에 값을 대입한다.(값 대입 및 초기화) */
        // 메모리에 값을 저장하기 위한 !!공간!! 만 생성을 한 상태이다.
        // 이제 우리는 =(대입 연산자) 를 이용하여 값을 저장할 수 있다.

        /* 목차. 2-1. 정수를 취급하는 자료형에 값 대입해보기. */
       bnum = 1;
       snum = 2;
       inum = 4;
       lnum = 8L; // 소문자 l 을 써도 되지만, 숫자 1과 혼선 여부가 있어 대문자.

        /* 목차. 2-2. 실수를 취급하는 자료형에 값 대입해보기 */
        fnum = 4.0f; // 대문자 f 를 써도 되지만, 소문자를 쓰는 것이 일반적이다.
        dnum = 8.0;

        /* 목차. 2-3. 문자를 취급하는 자료형에 값 대입해보기 */
        ch = 'a'; // 문자는 '' 홀따옴표!!
        ch = 97; // 문자는 내부적으로 숫자로 저장이 되어 있다. (section1 참고.)

        isTrue = true;
        isTrue = false;

        str = "안녕하세요";

        // 대표 자료형 : 정수 = int, 실수 = double 이 대표 자료형이다.
    }

}
